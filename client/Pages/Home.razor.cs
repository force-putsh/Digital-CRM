using System;
using System.Linq;
using System.Collections.Generic;
using System.Threading.Tasks;
using Radzen;
using Radzen.Blazor;
using Microsoft.AspNetCore.Components;
using System.Net.Http;
using System.Globalization;

namespace Crm.Pages
{
    /* It returns the monthly statistics for the server */
    public partial class HomeComponent
    {
        [Inject]
        HttpClient Http { get; set; }

        /// <summary>
        /// It returns the monthly statistics for the server.
        /// </summary>
        /// <returns>
        /// The `Stats` object.
        /// </returns>
        public async Task<Stats> MonthlyStats()
        {
            var response = await Http.SendAsync(new HttpRequestMessage(HttpMethod.Get, new Uri($"{UriHelper.BaseUri}api/servermethods/monthlystats")));

            return await response.ReadAsync<Stats>();
        }

        /// <summary>
        /// It returns a list of revenue by company.
        /// </summary>
        /// <returns>
        /// An IEnumerable of RevenueByCompany objects.
        /// </returns>
        public async Task<IEnumerable<RevenueByCompany>> RevenueByCompany()
        {
            var response = await Http.SendAsync(new HttpRequestMessage(HttpMethod.Get, new Uri($"{UriHelper.BaseUri}api/servermethods/RevenueByCompany")));

            return await response.ReadAsync<IEnumerable<RevenueByCompany>>();
        }

        /// <summary>
        /// Get revenue by employee
        /// </summary>
        /// <returns>
        /// An IEnumerable of RevenueByEmployee objects.
        /// </returns>
        public async Task<IEnumerable<RevenueByEmployee>> RevenueByEmployee()
        {
            var response = await Http.SendAsync(new HttpRequestMessage(HttpMethod.Get, new Uri($"{UriHelper.BaseUri}api/servermethods/RevenueByEmployee")));

            return await response.ReadAsync<IEnumerable<RevenueByEmployee>>();
        }

        /// <summary>
        /// It returns a list of revenue by month.
        /// </summary>
        /// <returns>
        /// The method returns an IEnumerable of RevenueByMonth objects.
        /// </returns>
        public async Task<IEnumerable<RevenueByMonth>> RevenueByMonth()
        {
            var response = await Http.SendAsync(new HttpRequestMessage(HttpMethod.Get, new Uri($"{UriHelper.BaseUri}api/servermethods/RevenueByMonth")));

            return await response.ReadAsync<IEnumerable<RevenueByMonth>>();
        }
    }

    /* This class represents a month and its associated statistics */
    public class Stats
    {
        public DateTime Month { get; set; }
        public decimal Revenue { get; set; }

        public int Contrats { get; set; }
        public decimal AverageDealSize { get; set; }
        public double Ratio { get; set; }
    }

    /* This class is used to store the company name and revenue */
    public class RevenueByCompany
    {
        public string Company { get; set; }
        public decimal Revenue { get; set; }
    }

    /* This class is used to store the employee name and the revenue generated by that employee */
    public class RevenueByEmployee
    {
        public string Employee { get; set; }
        public decimal Revenue { get; set; }
    }

    /* This class represents a month and the revenue for that month */
    public class RevenueByMonth
    {
        public DateTime Month { get; set; }
        public decimal Revenue { get; set; }
    }
}
